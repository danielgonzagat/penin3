{
  "timestamp": "2025-10-06T15:49:59.881017",
  "investigation_complete": true,
  "v7_processes": {
    "1886022": {
      "pid": 1886022,
      "name": "python3",
      "cmdline": "python3 /root/V7_RUNNER_DAEMON.py",
      "cpu_percent": 0.0,
      "memory_mb": 1128.1640625,
      "status": "running"
    },
    "1905024": {
      "pid": 1905024,
      "name": "python3",
      "cmdline": "python3 /root/V7_RUNNER_DAEMON.py",
      "cpu_percent": 0.0,
      "memory_mb": 1126.8515625,
      "status": "running"
    },
    "1916531": {
      "pid": 1916531,
      "name": "python3",
      "cmdline": "python3 /root/V7_RUNNER_DAEMON.py",
      "cpu_percent": 0.0,
      "memory_mb": 1080.89453125,
      "status": "running"
    },
    "1925082": {
      "pid": 1925082,
      "name": "python3",
      "cmdline": "python3 /root/V7_RUNNER_DAEMON.py",
      "cpu_percent": 0.0,
      "memory_mb": 1084.40625,
      "status": "running"
    }
  },
  "architecture": {
    "daemon_code": {
      "timestamp": "2025-10-06T15:49:59.669705",
      "file_size": 3208,
      "lines": 83,
      "imports": [
        "import sys, time, logging",
        "from core.system_v7_ultimate import IntelligenceSystemV7  # type: ignore",
        "import sys"
      ],
      "functions": [
        "main"
      ],
      "classes": [],
      "main_loop": false,
      "error_handling": false,
      "logging": true,
      "retry_mechanism": true
    },
    "system_structure": {
      "timestamp": "2025-10-06T15:49:59.670264",
      "core_modules": [
        "synergies.py",
        "consciousness_feedback_loop.py",
        "darwin_survivors_adapter_system_v7_honest.py",
        "system_v7_real.py",
        "system_v5_extracted_merge.py",
        "advanced_consciousness_monitor.py",
        "darwin_survivors_adapter_system_v7_real.py",
        "system_v4_full_merge.py",
        "system_v7_honest.py",
        "system_v7_ultimate.py",
        "maml_orchestrator.py",
        "system_v6_ia3_complete.py",
        "emergence_tracker_simple.py",
        "system_v3_integrated.py",
        "darwin_survivors_adapter_system_v7_ultimate.py",
        "database.py",
        "autocoding_orchestrator.py",
        "unified_agi_system.py",
        "self_reference_loop.py",
        "automl_orchestrator.py",
        "database_migrations.py",
        "emergence_tracker.py",
        "godel_kick_complete.py",
        "__init__.py",
        "database_integrator.py",
        "database_knowledge_engine.py",
        "system.py",
        "artificial_emotions.py",
        "darwinacci_hub.py"
      ],
      "extracted_algorithms": [],
      "models": [],
      "agents": [],
      "apis": [],
      "meta": [],
      "orchestration": [],
      "extracted_algorithms_modules": [
        "self_modification_engine.py",
        "xor_fitness_real.py",
        "intelligence_cubed_intensifier.py",
        "supreme_intelligence_auditor.py",
        "quantum_inspired_optimizer.py",
        "neural_processor.py",
        "advanced_evolution_engine.py",
        "neural_evolution_core.py",
        "expanded_tasks.py",
        "multimodal_real.py",
        "teis_brutal_evolution.py",
        "code_validator.py",
        "multi_system_coordinator.py",
        "dynamic_neuronal_layer.py",
        "incompleteness_engine.py",
        "auto_coding_engine.py",
        "neural_farm_variant.py",
        "auto_coding_real.py",
        "multimodal_engine.py",
        "evolutionary_nas.py",
        "diverse_task_generator.py",
        "intelligence_scorer.py",
        "__init__.py",
        "darwin_engine_darwinacci.py",
        "teis_experience_replay.py",
        "automl_engine.py",
        "database_mass_integrator.py",
        "meta_agentic_system.py",
        "novelty_system.py",
        "brutal_auditor_6api.py",
        "maml_engine.py",
        "teis_evolution_system.py",
        "darwin_engine_real.py",
        "maml_real.py",
        "curiosity_task_generator.py",
        "teis_autodidata_components.py",
        "genome_injector.py",
        "meta_meta_learning.py"
      ],
      "models_modules": [
        "autokeras_optimizer.py",
        "mnist_classifier.py",
        "__init__.py",
        "world_model.py"
      ],
      "agents_modules": [
        "dqn_cartpole_agent.py",
        "cleanrl_ppo_agent.py",
        "__init__.py",
        "advanced_ppo_agent.py",
        "dqn_agent.py"
      ],
      "apis_modules": [
        "api_manager.py",
        "multi_api_client.py",
        "litellm_wrapper_old.py",
        "__init__.py",
        "real_api_client.py",
        "litellm_wrapper.py"
      ],
      "meta_modules": [
        "agent_behavior_learner.py",
        "godelian_antistagnation.py",
        "__init__.py",
        "dspy_meta_prompter.py"
      ],
      "orchestration_modules": [
        "__init__.py",
        "langgraph_orchestrator.py",
        "langgraph_orchestrator_old.py"
      ]
    }
  },
  "algorithms": {
    "timestamp": "2025-10-06T15:49:59.671494",
    "neural_evolution": [
      "neural_processor.py",
      "advanced_evolution_engine.py",
      "neural_evolution_core.py",
      "teis_brutal_evolution.py",
      "neural_farm_variant.py",
      "evolutionary_nas.py",
      "teis_evolution_system.py"
    ],
    "self_modification": [
      "self_modification_engine.py"
    ],
    "intelligence_scoring": [
      "intelligence_cubed_intensifier.py",
      "supreme_intelligence_auditor.py",
      "intelligence_scorer.py"
    ],
    "meta_learning": [
      "meta_agentic_system.py",
      "meta_meta_learning.py"
    ],
    "evolutionary": [],
    "multi_modal": [
      "multimodal_real.py",
      "multi_system_coordinator.py",
      "multimodal_engine.py"
    ],
    "automl": [
      "automl_engine.py"
    ],
    "maml": [
      "maml_engine.py",
      "maml_real.py"
    ]
  },
  "capabilities": {
    "timestamp": "2025-10-06T15:49:59.673649",
    "cartpole_ppo": true,
    "mnist_classification": true,
    "evolutionary_optimization": true,
    "self_modification": true,
    "meta_learning": true,
    "neural_evolution": true,
    "intelligence_scoring": true,
    "emergence_detection": true,
    "auto_coding": true,
    "multi_modal": true,
    "automl": true,
    "database_integration": true,
    "experience_replay": true,
    "curriculum_learning": true,
    "transfer_learning": true
  },
  "emergence_signals": [],
  "metrics_summary": {},
  "recommendations": []
}