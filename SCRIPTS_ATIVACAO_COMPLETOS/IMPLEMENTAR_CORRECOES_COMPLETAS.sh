#!/bin/bash
# SCRIPT DE IMPLEMENTA√á√ÉO COMPLETA DAS CORRE√á√ïES
# Implementa todas as 10 tarefas do roadmap de corre√ß√£o

set -e  # Parar em caso de erro

echo "üöÄ INICIANDO IMPLEMENTA√á√ÉO COMPLETA DAS CORRE√á√ïES"
echo "=" | tr '\n' '=' | head -c 80
echo ""

# Tarefa 1: Testar detec√ß√£o de emerg√™ncia
echo ""
echo "üìã TAREFA 1: Testando detec√ß√£o de emerg√™ncia..."
python3 /root/TESTE_EMERGENCIA_EMPIRICO.py
if [ $? -eq 0 ]; then
    echo "‚úÖ TAREFA 1 COMPLETA: Detec√ß√£o de emerg√™ncia funciona"
else
    echo "‚ùå TAREFA 1 FALHOU: Detec√ß√£o de emerg√™ncia n√£o funciona"
    exit 1
fi

# Tarefa 2: Parar sistema antigo
echo ""
echo "üìã TAREFA 2: Parando sistema antigo..."
pkill -f "EVOLUCAO_AUTONOMA_INTELIGENCIA_CUBO.py" || true
sleep 2
echo "‚úÖ TAREFA 2 COMPLETA: Sistema antigo parado"

# Tarefa 3: Limpar arquivos antigos
echo ""
echo "üìã TAREFA 3: Limpando arquivos antigos..."
rm -f /root/evolucao_autonoma_state.json
rm -f /root/evolucao_autonoma_inteligencia_cubo.log
echo "‚úÖ TAREFA 3 COMPLETA: Arquivos antigos limpos"

# Tarefa 4: Iniciar sistema corrigido
echo ""
echo "üìã TAREFA 4: Iniciando sistema corrigido..."
nohup python3 /root/EVOLUCAO_AUTONOMA_INTELIGENCIA_CUBO_CORRIGIDO.py > /root/evolucao_cubo_corrigido_startup.log 2>&1 &
EVOLUCAO_PID=$!
echo "‚úÖ TAREFA 4 COMPLETA: Sistema corrigido iniciado (PID: $EVOLUCAO_PID)"

# Tarefa 5: Aguardar inicializa√ß√£o
echo ""
echo "üìã TAREFA 5: Aguardando inicializa√ß√£o (30 segundos)..."
sleep 30
echo "‚úÖ TAREFA 5 COMPLETA: Inicializa√ß√£o aguardada"

# Tarefa 6: Verificar se sistema est√° rodando
echo ""
echo "üìã TAREFA 6: Verificando se sistema est√° rodando..."
if ps -p $EVOLUCAO_PID > /dev/null; then
    echo "‚úÖ TAREFA 6 COMPLETA: Sistema est√° rodando (PID: $EVOLUCAO_PID)"
else
    echo "‚ùå TAREFA 6 FALHOU: Sistema n√£o est√° rodando"
    echo "√öltimas linhas do log:"
    tail -20 /root/evolucao_cubo_corrigido_startup.log
    exit 1
fi

# Tarefa 7: Verificar logs
echo ""
echo "üìã TAREFA 7: Verificando logs..."
if [ -f /root/evolucao_cubo_corrigido.log ]; then
    echo "√öltimas 10 linhas do log:"
    tail -10 /root/evolucao_cubo_corrigido.log
    echo "‚úÖ TAREFA 7 COMPLETA: Logs verificados"
else
    echo "‚ö†Ô∏è TAREFA 7: Log ainda n√£o criado (normal se muito recente)"
fi

# Tarefa 8: Verificar banco de dados
echo ""
echo "üìã TAREFA 8: Verificando banco de dados..."
if [ -f /root/advanced_metrics_corrigido.db ]; then
    METRICS_COUNT=$(sqlite3 /root/advanced_metrics_corrigido.db "SELECT COUNT(*) FROM metrics;" 2>/dev/null || echo "0")
    echo "M√©tricas no banco: $METRICS_COUNT"
    echo "‚úÖ TAREFA 8 COMPLETA: Banco de dados verificado"
else
    echo "‚ÑπÔ∏è TAREFA 8: Banco de dados ainda n√£o criado (normal se muito recente)"
fi

# Tarefa 9: Verificar arquivo de estado
echo ""
echo "üìã TAREFA 9: Verificando arquivo de estado..."
sleep 30  # Aguardar mais 30 segundos para garantir que estado foi salvo
if [ -f /root/evolucao_cubo_corrigido_state.json ]; then
    echo "Conte√∫do do estado:"
    cat /root/evolucao_cubo_corrigido_state.json | jq '.' 2>/dev/null || cat /root/evolucao_cubo_corrigido_state.json
    echo "‚úÖ TAREFA 9 COMPLETA: Arquivo de estado verificado"
else
    echo "‚ö†Ô∏è TAREFA 9: Arquivo de estado ainda n√£o criado (aguardar mais tempo)"
fi

# Tarefa 10: Verificar comunica√ß√£o com V7
echo ""
echo "üìã TAREFA 10: Verificando comunica√ß√£o com V7..."
if [ -f /root/v7_shared_state.json ]; then
    echo "Arquivo de comunica√ß√£o V7 criado:"
    cat /root/v7_shared_state.json | jq '.' 2>/dev/null || cat /root/v7_shared_state.json
    echo "‚úÖ TAREFA 10 COMPLETA: Comunica√ß√£o com V7 verificada"
else
    echo "‚ÑπÔ∏è TAREFA 10: Arquivo de comunica√ß√£o ainda n√£o criado (aguardar emerg√™ncia)"
fi

# Resumo final
echo ""
echo "=" | tr '\n' '=' | head -c 80
echo ""
echo "‚úÖ IMPLEMENTA√á√ÉO COMPLETA FINALIZADA"
echo ""
echo "üìä RESUMO:"
echo "   - Sistema corrigido rodando: PID $EVOLUCAO_PID"
echo "   - Log principal: /root/evolucao_cubo_corrigido.log"
echo "   - Banco de dados: /root/advanced_metrics_corrigido.db"
echo "   - Estado: /root/evolucao_cubo_corrigido_state.json"
echo "   - Comunica√ß√£o V7: /root/v7_shared_state.json"
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "   1. Monitorar logs: tail -f /root/evolucao_cubo_corrigido.log"
echo "   2. Verificar m√©tricas: sqlite3 /root/advanced_metrics_corrigido.db 'SELECT * FROM metrics ORDER BY timestamp DESC LIMIT 10;'"
echo "   3. Verificar estado: cat /root/evolucao_cubo_corrigido_state.json | jq '.'"
echo "   4. Aguardar detec√ß√£o de emerg√™ncia (pode levar alguns minutos)"
echo ""
echo "üéØ OBJETIVO: Detectar intelig√™ncia emergente REAL nos sistemas V7"
echo ""
